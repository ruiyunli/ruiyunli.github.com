<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[RyanLeo]]></title>
  <link href="http://ruiyunli.github.com/atom.xml" rel="self"/>
  <link href="http://ruiyunli.github.com/"/>
  <updated>2013-04-05T19:05:12+08:00</updated>
  <id>http://ruiyunli.github.com/</id>
  <author>
    <name><![CDATA[RyanLeo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android Baidu Map]]></title>
    <link href="http://ruiyunli.github.com/blog/2013/04/05/android-baidu-map/"/>
    <updated>2013-04-05T17:35:00+08:00</updated>
    <id>http://ruiyunli.github.com/blog/2013/04/05/android-baidu-map</id>
    <content type="html"><![CDATA[<h3>关于取点</h3>

<p>目的：点击屏幕上任意一点的位置，得到其经度和纬度</p>

<p>思路：获取屏幕坐标，转化为经纬度坐标</p>

<!-- more -->


<pre><code>int x = (int) event.getX();
int y = (int) event.getY();

// 将像素坐标转为地址坐标
Projection getProjection = mMapView.getProjection();
GeoPoint pt = getProjection.fromPixels(x, y);   

String longitude = Integer.toString(pt.getLongitudeE6());
String latitude = Integer.toString(pt.getLatitudeE6());            

switch (event.getAction() &amp; MotionEvent.ACTION_MASK) {
case MotionEvent.ACTION_DOWN:
    logText.setText("x: " + x + " y: " + y
            + '\n' +" longitude: " + longitude
            + " latitude: " + latitude);

    corrPoint = new GeoPoint(pt.getLatitudeE6(), pt.getLongitudeE6());
    corrItem = new OverlayItem(corrPoint, "title", "snippet");
    corrItem.setMarker(getResources().getDrawable(R.drawable.icon_marka));
    correctionOverlay.refreshItem(corrItem);
    mMapView.refresh();

    break;
}
</code></pre>

<p><code>参考资料</code>
http://www.cnblogs.com/fangfang01/archive/2013/03/05/2945050.html</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Errors]]></title>
    <link href="http://ruiyunli.github.com/blog/2013/04/05/android-errors/"/>
    <updated>2013-04-05T17:31:00+08:00</updated>
    <id>http://ruiyunli.github.com/blog/2013/04/05/android-errors</id>
    <content type="html"><![CDATA[<h3>Installation error: INSTALL_FAILED_INSUFFICIENT_STORAGE</h3>

<p>内存不够，卸掉一些程序</p>

<!-- more -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Alert Dialog]]></title>
    <link href="http://ruiyunli.github.com/blog/2013/04/05/android-dialog/"/>
    <updated>2013-04-05T16:32:00+08:00</updated>
    <id>http://ruiyunli.github.com/blog/2013/04/05/android-dialog</id>
    <content type="html"><![CDATA[<p>原文地址：http://www.cnblogs.com/Gaojiecai/archive/2011/12/10/2283156.html</p>

<p>我们在平时做开发的时候，免不了会用到各种各样的对话框，相信有过其他平台开发经验的朋友都会知道，大部分的平台都只提供了几个最简单的实现，如果我们想实现自己特定需求的对话框，大家可能首先会想到，通过继承等方式，重写我们自己的对话框。当然，这也是不失为一个不错的解决方式，但是一般的情况却是这样，我们重写的对话框，也许只在一个特定的地方会用到，为了这一次的使用，而去创建一个新类，往往有点杀鸡用牛刀的感觉，甚至会对我们的程序增加不必要的复杂性，对于这种情形的对话框有没有更优雅的解决方案呢？</p>

<!-- more -->


<p> <br/>
幸运的是，android提供了这种问题的解决方案，刚开始接触android的时候，我在做一个自定义对话框的时候，也是通过继承的方式来实现，后来随着对文档了解的深入，发现了android起始已经提供了相应的接口Dialog Builder ，下面我就吧相关的内容在这里分享一下，也能让更多的初学者少走弯路。</p>

<p>首先是一个最简单的应用，就是弹出一个消息框，在android中可以这样实现</p>

<pre><code>new AlertDialog.Builder(self)
    .setTitle("标题") 
    .setMessage("简单消息框")
    .setPositiveButton("确定", null)
    .show();
</code></pre>

<p>效果如下：</p>

<p><img src="http://ruiyunli.github.com/images/AndroidDialog/pic1.png" alt="Alt text" /></p>

<p>上面的代码中我们新建了一个AlertDialog，并用Builder方法形成了一个对象链，通过一系列的设置方法，构造出我们需要的对话框，然后调用show方法显示出来，注意到Builder方法的参数self，这个其实是Activity对象的引用，根据你所处的上下文来传入相应的引用就可以了。例如在onCreate方法中调用，只需传入this即可。</p>

<p>下面是带确认和取消按钮的对话框:</p>

<pre><code>new AlertDialog.Builder(self) 
    .setTitle("确认")
    .setMessage("确定吗？")
    .setPositiveButton("是", null)
    .setNegativeButton("否", null)
    .show();
</code></pre>

<p><img src="http://ruiyunli.github.com/images/AndroidDialog/pic2.png" alt="Alt text" /></p>

<p>注意到，这里有两个null参数，这里要放的其实是这两个按钮点击的监听程序，由于我们这里不需要监听这些动作，所以传入null值简单忽略掉，但是实际开发的时候一般都是需要传入监听器的，用来响应用户的操作。</p>

<p>下面是一个可以输入文本的对话框:</p>

<pre><code>new AlertDialog.Builder(self)
    .setTitle("请输入")
    .setIcon(android.R.drawable.ic_dialog_info)
    .setView(new EditText(self))
    .setPositiveButton("确定", null)
    .setNegativeButton("取消", null)
    .show();
</code></pre>

<p><img src="http://ruiyunli.github.com/images/AndroidDialog/pic3.png" alt="Alt text" /></p>

<p>如上代码，我们用setView方法，为我们的对话框传入了一个文本编辑框，当然，你可以传入任何的视图对象，比如图片框，WebView等。。尽情发挥你的想象力吧~
下面是单选框与多选框，也是非常有用的两种对话框:</p>

<pre><code>new AlertDialog.Builder(self)
    .setTitle("请选择")
    .setIcon(android.R.drawable.ic_dialog_info)                
    .setSingleChoiceItems(new String[] {"选项1","选项2","选项3","选项4"}, 0, 
    new DialogInterface.OnClickListener() {
        public void onClick(DialogInterface dialog, int which) {
            dialog.dismiss();
            }
        }
    )
    .setNegativeButton("取消", null)
    .show();
</code></pre>

<p><img src="http://ruiyunli.github.com/images/AndroidDialog/pic4.png" alt="Alt text" /></p>

<p>单选和多选对话框应该是我们平时用的非常多的，代码应该很好理解，下面再最后介绍两个
列表对话框:</p>

<pre><code>new AlertDialog.Builder(self)
    .setTitle("列表框")
    .setItems(new String[] {"列表项1","列表项2","列表项3"}, null)
    .setNegativeButton("确定", null)
    .show();
</code></pre>

<p><img src="http://ruiyunli.github.com/images/AndroidDialog/pic5.png" alt="Alt text" /></p>

<p>最后，在对话框中显示图片:</p>

<pre><code>ImageView img = new ImageView(self);
img.setImageResource(R.drawable.icon);

new AlertDialog.Builder(self)
    .setTitle("图片框")
    .setView(img)
    .setPositiveButton("确定", null)
    .show();
</code></pre>

<p><img src="http://ruiyunli.github.com/images/AndroidDialog/pic6.png" alt="Alt text" /></p>

<p>我们传入了一个ImageView来显示图片，这里显示了一个经典的android小绿人图标，当然这里还可以放上网络图片，具体的实现方法就不介绍了，留给大家来练习吧~</p>

<p>最后总结一下，android平台为我们开发提供了极大的便利,DialogBuilder能做的不止这些，这里给大家展示的只是冰山一角，我们可以尽情的发挥想象，创造我们自己的对话框。</p>

<p><code>参考资料</code>
http://www.cnblogs.com/Gaojiecai/archive/2011/12/10/2283156.html</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Skills]]></title>
    <link href="http://ruiyunli.github.com/blog/2013/04/05/android-skills/"/>
    <updated>2013-04-05T15:59:00+08:00</updated>
    <id>http://ruiyunli.github.com/blog/2013/04/05/android-skills</id>
    <content type="html"><![CDATA[<h3>About Menu</h3>

<ul>
<li><p>showAsAction可以修改为ifroom或者always，是否显示</p></li>
<li><p>在手机中，竖屏状态下text是不会显示的，切换到横屏才会显示text</p></li>
<li><p>图标可以到Android网站下载<code>http://developer.android.com/design/downloads/index.html</code></p></li>
</ul>


<!-- more -->


<h3>About PreferenceActivity</h3>

<ul>
<li><p>xml文件保存在res/xml文件夹下面</p></li>
<li><p>对onChangePerferenceListener和OnClickPerferenceListener两个函数，返回TRUE分别表示更新值和已经处理响应，返回FALSE分别表示不保存newValue和没有处理响应</p></li>
<li><p>取得值，getString(key,&#8221;unset&#8221;)</p></li>
<li><p>设置值，edit().putstring(key,&#8221;newValue&#8221;);</p></li>
</ul>


<h3>Eclipse Line Number</h3>

<ul>
<li>Ctrl+ F10</li>
</ul>


<h3>About dip dp px sp</h3>

<ul>
<li>dip: device independent  pixels(设备独立像素). 不同设备有不同的显示效果,这个和设备硬件有关，一般我们为了支持WVGA、HVGA和QVGA推荐使用这这个，不依赖像素。</li>
</ul>


<p>这里要特别注意dip与屏幕密度有关，而屏幕密度又与具体的硬件有关，硬件设置不正确，有可能导致dip不能正常显示。在屏幕密度为160的显示屏上，1dip=1px，有时候可能你的屏幕分辨率很大如480*800，但是屏幕密度没有正确设置比如说还是160，那么这个时候凡是使用dip的都会显示异常，基本都是显示过小。</p>

<pre><code>dip的换算： 
    dip（value）=(int) (px（value）/1.5 + 0.5) 
</code></pre>

<ul>
<li>dp: 很简单，和dip是一样的。</li>
<li>px: pixels(像素)，不同的设备不同的显示屏显示效果是相同的，这是绝对像素，是多少就永远是多少不会改变。</li>
<li>sp: scaled pixels(放大像素). 主要用于字体显示best for textsize。</li>
</ul>


<p><code>备注</code>: 根据google的推荐，像素统一使用dip，字体统一使用sp</p>

<p>举个例子区别px和dip：</p>

<p>px就是像素，如果用px,就会用实际像素画，比个如吧，用画一条长度为240px的横线，在480宽的模拟器上看就是一半的屏宽，而在320宽的模拟器上看就是2／3的屏宽了。</p>

<p>而dip，就是把屏幕的高分成480分，宽分成320分。比如你做一条160dip的横线，无论你在320还480的模拟器上，都是一半屏的长度。</p>

<pre><code>public static int dip2px(Context context, float dipValue){ 
    final float scale = context.getResources().getDisplayMetrics().density; 
    return (int)(dipValue * scale + 0.5f); 
} 

public static int px2dip(Context context, float pxValue){ 
    final float scale = context.getResources().getDisplayMetrics().density; 
    return (int)(pxValue / scale + 0.5f); 
} 
</code></pre>

<h3>About Application</h3>

<ul>
<li><p>在任何一个Activity中使用this.getApplication()获得操作句柄</p></li>
<li><p>其中可以放置全局变量</p></li>
<li><p>可以写应用中某个模块的初始化代码</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About Git]]></title>
    <link href="http://ruiyunli.github.com/blog/2013/03/12/about-git/"/>
    <updated>2013-03-12T15:00:00+08:00</updated>
    <id>http://ruiyunli.github.com/blog/2013/03/12/about-git</id>
    <content type="html"><![CDATA[<h3>Basic Command</h3>

<div>
  <pre><code class='c'>git init
git add .   //or git add -A
git commit -m 'your commit'
git remote add origin https://github.com/user-name/repo-name.git
git push origin master</code></pre>
</div>




<!-- more -->


<h3>本地从服务器更新代码</h3>

<p><code>note：</code>只能更新比本地版本更新的节点</p>

<div>
  <pre><code class='c'>git fetch origin master:tmp
git diff tmp
git merge tmp</code></pre>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Skills When Use Octopress]]></title>
    <link href="http://ruiyunli.github.com/blog/2013/03/10/skills-when-use-octopress/"/>
    <updated>2013-03-10T19:48:00+08:00</updated>
    <id>http://ruiyunli.github.com/blog/2013/03/10/skills-when-use-octopress</id>
    <content type="html"><![CDATA[<p><code>以下均为Windows系统中使用总结</code></p>

<h3>关于UTF8编码</h3>

<ul>
<li>先使用<code>rake new_post["FileName"]</code></li>
<li>使用<code>Notepad++</code>打开文件，并编辑</li>
<li>格式->转为UTF-8无BOM编码格式，保存</li>
<li><code>rake generate &amp; rake preview</code></li>
</ul>


<!-- more -->


<h3>添加标签分类</h3>

<ul>
<li><code>One category</code></li>
</ul>


<div>
  <pre><code class='c'>categories: Sass</code></pre>
</div>


<ul>
<li><code>Multiple categories example 1</code></li>
</ul>


<div>
  <pre><code class='c'>categories: [CSS3, Sass, Media Queries]</code></pre>
</div>


<ul>
<li><code>Multiple categories example 2</code></li>
</ul>


<div>
  <pre><code class='c'>categories:
    - CSS3
    - Sass
    - Media Queries</code></pre>
</div>


<h3>添加Disqus</h3>

<ul>
<li>编辑<code>_config.yml</code>，修改下面的内容</li>
</ul>


<div>
  <pre><code class='c'># Disqus Comments
disqus_short_name: shareizzzorg
disqus_show_comment_count: true</code></pre>
</div>


<h3>关于加速网站</h3>

<ul>
<li>在<code>_config.yml</code>中关掉<code>twitter</code></li>
</ul>


<h3>关于<code>Read More...</code></h3>

<ul>
<li>在某一篇博文的文字间如果使用<code>&lt;!-- more --&gt;</code>，则后面的文字都将不会显示，而出现一个<code>Read On-&gt;</code>的按钮</li>
</ul>


<h3>关于<code>404</code></h3>

<ul>
<li>在<code>source</code>目录下添加<code>404.html</code>页面</li>
</ul>


<p><code>http://www.360doc.com/content/12/0216/17/1016783_187135339.shtml</code></p>

<ul>
<li>在<code>octopress\source\_includes\custom中的navigation.html</code>中添加</li>
</ul>


<p><code>&lt;li&gt;&lt;a href="http://ruiyunli.github.com/../about"&gt;About&lt;/a&gt;&lt;/li&gt;</code></p>

<ul>
<li><code>rake generate</code></li>
</ul>


<h3>关于<code>NavigationBar</code></h3>

<p>*在<code>octopress\source\_includes\custom</code>中的<code>navigation.html</code>中添加标签</p>

<ul>
<li>在所添加的标签所指向的文件夹中添加<code>makedown</code>文件或者<code>html</code>文件</li>
</ul>


<h3>关于代码高亮</h3>

<ul>
<li><p>在代码区的两端加上标签，区前加<code>&lt;div&gt;
&lt;pre&gt;&lt;code class='c'&gt;</code>，区后加<code>&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</code>，其中C为语言种类</p></li>
<li><p>Google <code>Backtick Code Blocks</code> <code>Code Blocks</code> <code>Pygments Code</code></p></li>
</ul>


<h3>关于Octopress Sidebar Categories</h3>

<p>原文:<code>http://www.dotnetguy.co.uk/post/2012/06/25/octopress-category-list-plugin/</code></p>

<ul>
<li>在plug-in文件夹下面添加文件category_list_tag.rb</li>
</ul>


<figure class='code'><figcaption><span>ategory_list_tag.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Jekyll</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">CategoryListTag</span> <span class="o">&lt;</span> <span class="ss">Liquid</span><span class="p">:</span><span class="ss">:Tag</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
</span><span class='line'>    <span class="n">html</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>    <span class="n">categories</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">categories</span><span class="o">.</span><span class="n">keys</span>
</span><span class='line'>    <span class="n">categories</span><span class="o">.</span><span class="n">sort</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">category</span><span class="o">|</span>
</span><span class='line'>      <span class="n">posts_in_category</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">categories</span><span class="o">[</span><span class="n">category</span><span class="o">].</span><span class="n">size</span>
</span><span class='line'>      <span class="n">category_dir</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">config</span><span class="o">[</span><span class="s1">&#39;category_dir&#39;</span><span class="o">]</span>
</span><span class='line'>      <span class="n">category_url</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">category_dir</span><span class="p">,</span> <span class="n">category</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/_|\P{Word}/</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/-{2,}/</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">downcase</span><span class="p">)</span>
</span><span class='line'>      <span class="n">html</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;&lt;li class=&#39;category&#39;&gt;&lt;a href=&#39;/</span><span class="si">#{</span><span class="n">category_url</span><span class="si">}</span><span class="s2">/&#39;&gt;</span><span class="si">#{</span><span class="n">category</span><span class="si">}</span><span class="s2"> (</span><span class="si">#{</span><span class="n">posts_in_category</span><span class="si">}</span><span class="s2">)&lt;/a&gt;&lt;/li&gt;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">html</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="ss">Liquid</span><span class="p">:</span><span class="ss">:Template</span><span class="o">.</span><span class="n">register_tag</span><span class="p">(</span><span class="s1">&#39;category_list&#39;</span><span class="p">,</span> <span class="ss">Jekyll</span><span class="p">:</span><span class="ss">:CategoryListTag</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在source/_includes/asides中添加category_list.html文件</li>
</ul>


<figure class='code'><figcaption><span>category_list.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="nx">section</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">Categories</span><span class="o">&lt;</span><span class="err">/h1&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">ul</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;categories&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="p">{</span><span class="o">%</span> <span class="nx">category_list</span> <span class="o">%</span><span class="p">}</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/ul&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在_config.yml配置</li>
</ul>


<figure class='code'><figcaption><span>_config.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">default_asides</span><span class="p">:</span> <span class="o">[</span><span class="n">asides</span><span class="o">/</span><span class="n">category_list</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">asides</span><span class="o">/</span><span class="n">recent_posts</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">asides</span><span class="o">/</span><span class="n">twitter</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">asides</span><span class="o">/</span><span class="n">delicious</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">asides</span><span class="o">/</span><span class="n">pinboard</span><span class="o">.</span><span class="n">html</span><span class="p">,</span> <span class="n">asides</span><span class="o">/</span><span class="n">googleplus</span><span class="o">.</span><span class="n">html</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build Blog With Octopress]]></title>
    <link href="http://ruiyunli.github.com/blog/2013/03/10/build-blog-with-octopress/"/>
    <updated>2013-03-10T19:44:00+08:00</updated>
    <id>http://ruiyunli.github.com/blog/2013/03/10/build-blog-with-octopress</id>
    <content type="html"><![CDATA[<p><code>windows环境下基于Octopress的博客搭建和部署</code></p>

<h3>搭建 Octopress 本地环境</h3>

<ul>
<li><p>安装 <a href="http://help.github.com/win-set-up-git/">git for windows</a></p></li>
<li><p>安装<code>ruby</code>，下载地址: <a href="http://rubyforge.org/frs/?group_id=167">RubyInstaller</a>，安装版本 <a href="http://rubyforge.org/frs/download.php/75127/rubyinstaller-1.9.2-p290.exe">rubyinstaller-1.9.2-p290.exe</a>，注意版本是1.9.2</p></li>
</ul>


<!-- more -->


<ul>
<li>安装gem编译环境， 下载地址：<a href="https://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe">DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe</a>，下载完成后，将其解压到 如 <code>E:\DevKit</code>，然后在win的cmd窗口中执行如下命令进行安装：</li>
</ul>


<div>
  <pre><code class='c'>cd E:\DevKit
ruby dk.rb init
ruby dk.rb instal</code></pre>
</div>


<ul>
<li>安装<code>python</code>，下载地址：<a href="http://www.activestate.com/activepython">activepython</a> ，安装2.7版，主要是博客代码加亮模块需要<code>python</code>环境的支持，安装完以后，在win的cmd窗口中执行：</li>
</ul>


<div>
  <pre><code class='c'>easy_install pygments</code></pre>
</div>


<h3>更新配置</h3>

<ul>
<li>中文<code>utf-8</code>编码的支持，在win xp环境变量中配置如下：</li>
</ul>


<div>
  <pre><code class='c'>LANG=zh_CN.UTF-8
LC_ALL=zh_CN.UTF-8</code></pre>
</div>


<ul>
<li>变更<code>gem</code>的更新源，<code>ruby</code>的官方更新源经常被河蟹，木有办法，幸亏国内有淘宝做好事，提供了国内的更新源，这样速度就快多了，变更如下：</li>
</ul>


<div>
  <pre><code class='c'>gem sources --remove http://rubygems.org/
gem sources -a http://ruby.taobao.org/
gem sources -l</code></pre>
</div>


<p>注意 ：请确保只有 <code>http://ruby.taobao.org/</code> 唯一一个条目</p>

<ul>
<li>安装<code>rdoc</code>和<code>bundler</code></li>
</ul>


<div>
  <pre><code class='c'>gem install rdoc bundler</code></pre>
</div>


<h3>安装<code>Octopress</code></h3>

<ul>
<li>下载<code>Octopress</code>源码</li>
</ul>


<div>
  <pre><code class='c'>git clone git://github.com/imathis/octopress.git octopress
cd octopress # If you use RVM, You'll be asked if you trust the .rvmrc file (say yes).
ruby --version # Should report Ruby 1.9.2</code></pre>
</div>


<ul>
<li>安装依赖模块</li>
</ul>


<div>
  <pre><code class='c'>$ vi Gemfile
#将行 ： source &quot;http://rubygems.org/&quot;
#改为 ： source &quot;http://ruby.taobao.org/&quot;
$ bundle install</code></pre>
</div>


<ul>
<li>安装默认主题</li>
</ul>


<div>
  <pre><code class='c'>rake install</code></pre>
</div>


<p>如若出错：</p>

<div>
  <pre><code class='c'>$ rake install
rake aborted!
You have already activated rake 0.9.2.2, but your Gemfile requires rake 0.9.2. Using bundle exec may solve this.
(See full trace by running task with --trace)</code></pre>
</div>


<p>修正办法为：</p>

<div>
  <pre><code class='c'>$ bundle update; rake install</code></pre>
</div>


<h3>发布博客到<code>github pages</code></h3>

<ul>
<li>与<code>github</code>建立连接</li>
</ul>


<div>
  <pre><code class='c'>rake setup_github_pages</code></pre>
</div>


<p>按照提示输入 github page repository的url地址，例如：<code>git@github.com:RubyLouvre/rubylouvre.github.com.git</code></p>

<ul>
<li>生成静态页面</li>
</ul>


<div>
  <pre><code class='c'>rake generate</code></pre>
</div>


<ul>
<li>本地预览，访问 <code>http://localhost:4000</code>,查看博客本地运行效果</li>
</ul>


<div>
  <pre><code class='c'>rake preview</code></pre>
</div>


<ul>
<li>发送到<code>github</code>服务器，访问<code>http://careychow.github.com</code>查看博客服务器运行效果</li>
</ul>


<div>
  <pre><code class='c'>rake deploy</code></pre>
</div>


<ul>
<li>保存博客源码到<code>github source</code>分支</li>
</ul>


<div>
  <pre><code class='c'>git add .
git commit -m 'blog source'
git push origin source</code></pre>
</div>


<h3>配置<code>Octopress</code></h3>

<ul>
<li>更新配置文件 <code>octopress/_config.yml</code>, ，参考<code>http://octopress.org/docs/configuring/</code>，示例如下，若包含中文，请将文件格式保存成utf-8的格式</li>
</ul>


<div>
  <pre><code class='c'>url: http://share.izzz.org
title: RyanLeo
subtitle: Share With You...
author: RyanLeo
simple_search: http://google.com/search
description:</code></pre>
</div>


<ul>
<li>绑定个人域名</li>
</ul>


<div>
  <pre><code class='c'>echo 'www.example.com' &gt;&gt; octopress/source/CNAME</code></pre>
</div>


<p>修改域名 <code>www.example.com</code> A记录到 <code>207.97.227.245</code>,或者<code>CNAME</code>到<code>github-name.github.com</code></p>

<ul>
<li>创建新文章和新页面</li>
</ul>


<div>
  <pre><code class='c'>rake new_post[&quot;article name&quot;]
rake new_page[&quot;page name&quot;]</code></pre>
</div>


<ul>
<li>发布到<code>github</code>个人空间</li>
</ul>


<div>
  <pre><code class='c'>rake generate
rake deploy</code></pre>
</div>

]]></content>
  </entry>
  
</feed>
